# Made by MisterBasic
options:
	# _________________________________
	#
	#            Plugin.yml
	# _________________________________

	name: GoldenEyes
	author: MisterBasic
	version: 0.4.1
	description: Stop cheaters from hacking on your server!
	
	# Websites
	github: https://github.com/MisterBasic/GoldenEyes
	version-pastebin: https://pastebin.com/raw/2tmJjAvs

	# Checks
	autoclicker: 15              # Maximum CPS for alert
	autoclicker-kick: 30         # Maximum CPS for kick
	reach: 5                     # Maximum Reach for alert
	fastplace: 20                # Maximum Blocks placed for alert
	fastladder: 4                # Maximum CPS for alert

on enable:
	# AutoUpdater
	if text from "{@version-pastebin}" is not "{@version}":
		send "§1>§9>§b>" to console
		send "[GoldenEyesAntiCheat] You are currently running an outdated version." to console
		send "[GoldenEyesAntiCheat] Please update to a new version: https://www.spigotmc.org/resources/sk-goldeneyes-anticheat.54638/" to console
		send "§1>§9>§b>" to console
	# Console enable message
	send "[{@name}] Enabling {@name} v{@version}" to console
	# Configuration Manager
	clear {CONFIG::*}
	set {CONFIG::prefix} to yml value "plugin.prefix" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::debug} to yml value "plugin.debug" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::options.kick} to yml value "options.kick" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::options.actionbar} to yml value "options.actionbar" from file "plugins/GoldenEyes/config.yml"
	if yml value "plugin.debug" from file "plugins/GoldenEyes/config.yml" is not set:
		set yml value "plugin.prefix" from file "plugins/GoldenEyes/config.yml" to "&8[&6GoldenEyes&8]&e"
		set yml value "plugin.debug" from file "plugins/GoldenEyes/config.yml" to false
		set yml value "options.kick" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "options.actionbar" from file "plugins/GoldenEyes/config.yml" to true
		set {CONFIG::prefix} to yml value "plugin.prefix" from file "plugins/GoldenEyes/config.yml"
		set {CONFIG::debug} to yml value "plugin.debug" from file "plugins/GoldenEyes/config.yml"
		set {CONFIG::options.kick} to yml value "options.kick" from file "plugins/GoldenEyes/config.yml"
		# Configuration Checks (Values+Enabled)
		set yml value "checks.autoclicker.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.autoclicker.maxcps" from file "plugins/GoldenEyes/config.yml" to 15
		set yml value "checks.autoclicker.maxcpskick" from file "plugins/GoldenEyes/config.yml" to 30
		set yml value "checks.reach.enabled" from file "plugins/GoldenEyes/config.yml" to true # Default
		set yml value "checks.reach.maxdistance" from file "plugins/GoldenEyes/config.yml" to 4
		set yml value "checks.fastplace.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.fastplace.maxblocks" from file "plugins/GoldenEyes/config.yml" to 15
		set yml value "checks.fastbow.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.waterwalk.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.autosneak.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.liquidinteract.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.flight.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.antikb.enabled" from file "plugins/GoldenEyes/config.yml" to true
		set yml value "checks.xray.enabled" from file "plugins/GoldenEyes/config.yml" to false
		set yml value "checks.speed.enabled" from file "plugins/GoldenEyes/config.yml" to false
		set yml value "checks.fastladder.enabled" from file "plugins/GoldenEyes/config.yml" to false
	updatePluginData()
on disable:
	send "[{@name}] Disabling {@name} v{@version}" to console
on join:
	if player has permission "goldeneyes.joinmessage":
		gecmd("version", player)
	if yml value "violations.%uuid of player%.autoclicker" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.autoclicker" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.reach" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.reach" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.fastplace" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.fastplace" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.fastbow" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.fastbow" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.waterwalk" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.waterwalk" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.autosneak" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.autosneak" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.liquidinteract" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.liquidinteract" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.flight" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.flight" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.antikb" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.antikb" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.xray" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.xray" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.speed" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.speed" from file "plugins/GoldenEyes/playerdata.yml" to 0
	if yml value "violations.%uuid of player%.fastladder" from file "plugins/GoldenEyes/playerdata.yml" is not set:
		set yml value "violations.%uuid of player%.fastladder" from file "plugins/GoldenEyes/playerdata.yml" to 0
	updatePlayerData(player)
every 2 minutes:
	{CONFIG::options.actionbar} is true
	send an actionbar with "%{CONFIG::prefix}% This server is protected by GoldenEyes AntiCheat!" to all players # From Skellett
# AutoClicker
on left click:
	{CONFIG::.checks.autoclicker.enabled} is true
	player does not have permission "goldeneyes.autoclicker.bypass"
	add 1 to {goldeneyes.cps::%player%}
	if {goldeneyes.lastclick.%player%} is not set:
		set {goldeneyes.lastclick.%player%} to now
	if {goldeneyes.cps::%player%} >= {@autoclicker}:
		add 1 to {CONFIG::violations.%uuid of player%.autoclicker}
		alert("%player% failed FastClick (CPS: %{goldeneyes.cps::%player%}%) [VL %{goldeneyes.autoclicker.%player%.vl}%]", player)
	if {goldeneyes.cps::%player%} >= {@autoclicker-kick}:
		gekick("AutoClicker", player)
	if {goldeneyes.lastclick.%player%} was less than 0.20 ticks ago:
		add 1 to {CONFIG::violations.%uuid of player%.autoclicker}
		alert("%player% failed FastClick [VL %{goldeneyes.autoclicker.%player%.vl}%]", player)
	updatePlayerData(player)
every second:
	clear {goldeneyes.fastplace::*}
	clear {goldeneyes.cps::*}
# FastBow
on shoot:
	{CONFIG::checks.fastbow.enabled} is true
	shooter does not have permission "goldeneyes.fastbow.bypass"
	projectile is an arrow
	if {goldeneyes.lastshot.%shooter%} was less than 2 ticks ago:
		set {goldeneyes.lastshot.%shooter%} to now
		add 1 to {CONFIG::violations.%uuid of shooter%.fastbow}
		alert("%shooter% failed FastBow [VL {CONFIG::violations.%uuid of shooter%.fastbow}]", shooter)
		stop
	set {goldeneyes.lastshot.%shooter%} to now
# Fast Ladder
on any movement:
	{CONFIG::checks.fastladder.enabled}
	player is not riding
	player's flight mode is false
	if block at the player is a ladder:
		block below the player is a ladder:
			block above the player is a ladder:
				set {goldeneyes.laddery1.%player%} to y coord of player
				set {_expected} to y coord of player + {@fastladder}
				set {_loc} to location of player
				wait 15 ticks
				set {goldeneyes.laddery2.%player%} to y coord of player
				if y coord of player is greater than {_expected}:
					add 1 to {CONFIG::violations.%uuid of player%.fastladder}
					alert("%player% failed FastLadder [VL %{CONFIG::violations.%uuid of player%.fastladder}%]", player)
					teleport the player to {_loc}
					stop
# Reach
on damage:
	{CONFIG::checks.reach.enabled} is true
	attacker does not have permission "goldeneyes.reach.bypass"
	attacker is a player
	attacker's gamemode is not creative or spectator
	damage cause is not a projectile, potion, thorns or explosion
	if distance between attacker and victim is greater than {@reach}:
		add 1 to {goldeneyes.reach.%attacker%.vl}
		add 1 to {goldeneyes.reach.%attacker%}
		alert("%attacker% failed Reach (Distance: %distance between attacker and victim%/{@reach}) [VL %{goldeneyes.reach.%attacker%.vl}%]", attacker)
		if {goldeneyes.reach.%attacker%} > 20:
			gekick("Reach", attacker)
on place:
	{CONFIG::checks.reach.enabled} is true
	player does not have permission "goldeneyes.reach.bypass"
	player's gamemode is not creative
	if distance between event-block and player is greater than 5:
		gekick("Reach", player)
# Scaffold / Fastplace
on place:
	{CONFIG::checks.fastplace.enabled} is true
	player does not have permission "goldeneyes.fastplace.bypass"
	add 1 to {goldeneyes.fastplace::%player%}
	if {goldeneyes.lastplace::%player%} is not set:
		set {goldeneyes.lastplace::%player%} to now
		stop
	if difference between {goldeneyes.lastplace::%player%} and now < 0.9 ticks:
		cancel event
		add 1 to {goldeneyes.fastplace.%player%.vl}
		alert("%player% failed FastPlace [VL %{CONFIG::violations.%uuid of player%.fastplace}%]", player)
		reset {goldeneyes.lastplace::%player%}
		stop
	if {goldeneyes.fastplace::%player%} >= {@fastplace}:
		cancel event
		add 1 to {CONFIG::violations.%uuid of player%.fastplace}
		alert("%player% failed FastPlace [VL %{CONFIG::violations.%uuid of player%.fastplace}%]", player)
		stop

# [----------------] #
# [    FastEat     ] #
# [----------------] #
on consume:
	#{CONFIG::checks.fasteat.enabled} is true
	if {fasteat.%player%} is set:
		if difference between {fasteat.%player%} and now < 0.1 seconds:
			cancel event
			send "[GoldenEyesAntiCheat] %player% failed FastEat (BETA)" to console
		clear {fasteat.%player%}
	set {fasteat.%player%} to now
# AutoSneak

on chat:
	{CONFIG::checks.autosneak.enabled} is true
	player does not have permission "goldeneyes.autosneak.bypass"
	if player is sneaking:
		add 1 to {CONFIG::violations.%uuid of player%.autosneak}
		log "%player% failed AutoSneak {Talked while sneaking} [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
		alert("%player% failed AutoSneak [VL %{CONFIG::violations.%uuid of player%.autosneak}%]", player)
on inventory close:
	# Little extra
	clear {menu.%player%}
	{CONFIG::checks.autosneak.enabled} is true
	player does not have permission "goldeneyes.autosneak.bypass"
	if player is sneaking:
		add 1 to {CONFIG::violations.%uuid of player%.autosneak}
		log "%player% failed AutoSneak {Closed inventory while sneaking} [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
		alert("%player% failed AutoSneak [VL %{CONFIG::violations.%uuid of player%.autosneak}%]", player)
		
on inventory click:
	{CONFIG::checks.autosneak.enabled} is true
	player does not have permission "goldeneyes.autosneak.bypass"
	if player is sneaking:
		add 1 to {CONFIG::violations.%uuid of player%.autosneak}
		log "%player% failed AutoSneak {Clicked in inventory while sneaking} [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
		alert("%player% failed AutoSneak [VL %{CONFIG::violations.%uuid of player%.autosneak}%]", player)
on inventory open:
	{CONFIG::checks.autosneak.enabled} is true
	player does not have permission "goldeneyes.autosneak.bypass"
	if player is sneaking:
		add 1 to {CONFIG::violations.%uuid of player%.autosneak}
		log "%player% failed AutoSneak {Opened inventory while sneaking} [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
		alert("%player% failed AutoSneak [VL %{CONFIG::violations.%uuid of player%.autosneak}%]", player)
on sprint toggle:
	if player is on ground:
		{CONFIG::checks.autosneak.enabled} is true
		player does not have permission "goldeneyes.autosneak.bypass"
		if player is sneaking:
			add 1 to {CONFIG::violations.%uuid of player%.autosneak}
			log "%player% failed AutoSneak {Toggled sprint whilst sneaking} [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
			alert("%player% failed AutoSneak [VL %{CONFIG::violations.%uuid of player%.autosneak}%]", player)
# X-ray Vision [WARNING: This version of detection is still in development stages. I would advise NOT using this check.]
on mine:
	event-block is diamond ore
	{CONFIG::checks.xray.enabled} is true
	player's gamemode is survival
	player does not have permission "goldeneyes.xray.bypass"
	add 1 to {goldeneyes.diamondsmined.%player%}
	if {goldeneyes.diamondsmined.%player%} is greater than 20:
		add 1 to {CONFIG::violations.%player%.xray}
		updatePlayerData(player)
		alert("%player% might be using Xray! [Diamonds Mined: %{goldeneyes.diamondsmined.%player%}%]", player)
		clear {goldeneyes.diamondsmined.%player%}
on mine:
	event-block is gold ore
	{CONFIG::checks.xray.enabled} is true
	player's gamemode is survival
	player does not have permission "goldeneyes.xray.bypass"
	add 1 to {goldeneyes.goldmined.%player%}
	if {goldeneyes.goldmined.%player%} is greater than 20:
		add 1 to {CONFIG::violations.%player%.xray}
		updatePlayerData(player)
		alert("%player% might be using Xray! [Gold Mined: %{goldeneyes.goldminded.%player%}%]", player)
		clear {goldeneyes.goldmined.%player%}
on mine:
	event-block is iron ore
	{CONFIG::checks.xray.enabled} is true
	player's gamemode is survival
	player does not have permission "goldeneyes.xray.bypass"
	add 1 to {goldeneyes.ironmined.%player%}
	if {goldeneyes.ironmined.%player%} is greater than 30:
		add 1 to {CONFIG::violations.%player%.xray}
		updatePlayerData(player)
		alert("%player% might be using Xray! [Iron Mined: %{goldeneyes.ironmined.%player%}%]", player)
		clear {goldeneyes.ironmined.%player%}
every 10 minutes:
	loop all players:
		clear {goldeneyes.ironmined.%loop-player%}
		clear {goldeneyes.goldmined.%loop-player%}
		clear {goldeneyes.diamondsmined.%loop-player%}

# WaterWalk
on walk on water:
	{CONFIG::checks.waterwalk.enabled} is true
	set {_loc} to location of player
	player does not have permission "goldeneyes.waterwalk.bypass"
	set {_lilypad} to 0
	player is not flying
	loop all blocks in radius 1 around player:
		if loop-block is a lily pad:
			add 1 to {_lilypad}
	if {_lilypad} > 1:
		stop
	else if block below the player is water:
		if block left of block below the player is water:
			if block right of block below the player is water:
				if block behind the block below the player is water:
					if block infront of block below the player is water:
						if block at player is not water:
							if block above player is not water:
								player is on ground
								cancel event
								teleport the player to {_loc}
								add 1 to {CONFIG::violations.%uuid of player%.waterwalk}
								add 1 to {goldeneyes.waterwalk.%player%}
								
								log "%player% failed WaterWalk (Dist: %distance between {_loc} and player%) [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
								alert("%player% failed WaterWalk [VL %{CONFIG::violations.%uuid of player%.waterwalk}%]", player)
								if {goldeneyes.waterwalk.%player%} is greater than 20:
									{goldeneyes.waterwalk.%player%}
									gekick("WaterWalk", player)
# Liquid Interact
on right click on water or lava:
	{CONFIG::checks.liquidinteract.enabled} is true
	player does not have permission "goldeneyes.liquidinteract.bypass"
	cancel event
	add 1 to {CONFIG::violations.%uuid of player%.liquidinteract}
	alert("%player% failed LiquidInteract [VL %{CONFIG::violations.%uuid of player%.liquidinteract}%]", player)
on left click on water or lava:
	{CONFIG::checks.liquidinteract.enabled} is true
	player does not have permission "goldeneyes.liquidinteract.bypass"
	cancel event
	add 1 to {CONFIG::violations.%uuid of player%.liquidinteract}
on block break:
	{CONFIG::checks.liquidinteract.enabled} is true
	player does not have permission "goldeneyes.liquidinteract.bypass"
	if event-block is water or lava:
		gekick("LiquidInteract", player)
on block damage:
	{CONFIG::checks.liquidinteract.enabled} is true
	player does not have permission "goldeneyes.liquidinteract.bypass"
	if event-block is water or lava:
		gekick("LiquidInteract", player)
on any movement:	
	{CONFIG::checks.flight.enabled} is true
	# Flight
	block below the player is air
	block at the player is air
	player is not flying
	player is not riding
	player is on ground
	set {_blocks} to 0
	set {_loc} to location of player
	player's gamemode is not Creative or Spectator:
		# Possible problems if this wasn't here
		loop all blocks in radius 1 around player:
			if loop-block is stairs or slab:
				stop
		# Checks if the player is in the air
		loop all blocks in radius 2 around player:
			if loop-block is not air:
				add 1 to {_blocks}
		if {_blocks} is greater than 0:
			stop
		if {_blocks} is less than 1:
			# Alerts
			add 1 to {CONFIG::violations.%uuid of player%.flight}
			add 1 to {goldeneyes.move.%player%}
			log "%player% failed Flight (Based on Movements) [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
			alert("%player% failed Flight (Movement) [VL %{CONFIG::violations.%uuid of player%.flight}%]", player)
			teleport the player to {_loc}
			cancel event
			if {goldeneyes.move.%player%} is greater than 5:
				clear {goldeneyes.move.%player%}
				gekick("Flight (Movement)", player)
	updatePlayerData(player)
on packet:
	if event-string is "PacketPlayInFlying":
		ground state of event-player is false
		set {_loc} to event-player's location
		block at event-player is not ladder, vines or barrier
		add 1 to {goldeneyes.flight.%player%}
		if {goldeneyes.flight.%player%} >= 15:
			wait a tick
			add 1 to {CONFIG::violations.%uuid of player%.flight}
			log "%player% failed Flight (Based on Packets) [Ping: %player's ping%, IP: %player's ip%]" to "GoldenEyes/checks.log"
			alert("%event-player% failed Flight (Packet) [VL %{CONFIG::violations.%uuid of player%.flight}%]", event-player)
			
			updatePlayerData(event-player)
			clear {goldeneyes.flight.%player%}
			wait 3 ticks
			teleport event-player to {_loc}
		else if {goldeneyes.flight.%player%} >= 100:
			clear {goldeneyes.flight.%player%}
			gekick("Flight (Packet)", player)
# AntiAirWalk
#on move on air:
#	set {_y1} to player's altitude
#	set {_loc} to player's location
#	wait 10 ticks
#	set {_y2} to player's altitude
#	if difference between {_y1} and {_y2} < 0.1:
#		teleport the player to {_loc}

# AntiKB
on damage:	
	{CONFIG::checks.antikb.enabled} is true
	attacker is set
	if damage cause is fall, fire, thorns or potion:
		stop
	else:
		set {_loc1} to location of victim
		wait 7 ticks
		set {_loc2} to location of victim
		
		
		block west of victim is air
		block east of victim is air
		block north of victim is air
		block south the victim is air
		
		block west of the block above the victim is air
		block east of the block above the victim is air
		block north of the block above the victim is air
		block south of the block above the victim is air
		block below the victim is not water or lava
		
		victim is not riding
		victim is not flying
		
		if block at victim is not cobweb:
			if victim's gamemode is not Creative or Spectator:
				if distance between {_loc1} and {_loc2} < 0.1:
					if victim's ping is less than 260:
						{CONFIG::violations.%uuid of victim%.antikb}
						add 1 to {goldeneyes.antikb.%victim%}
						log "%victim% failed AntiKB (Velocity: %distance between {_loc1} and {_loc2}%) [Ping: %victim's ping%, IP: %victim's ip%]" to "GoldenEyes/checks.log"
						alert("%victim% failed AntiKnockBack [VL %{CONFIG::violations.%uuid of victim%.antikb}%]", victim)
						if {goldeneyes.antikb.%victim%} >= 20:
							clear {goldeneyes.antikb.%victim%}
							gekick("AntiKnockback", victim)
every minute:
	loop all players:
		clear {goldeneyes.move.%loop-player%}
		clear {goldeneyes.waterwalk.%loop-player%}
		clear {goldeneyes.antikb.%loop-player%}
		clear {goldeneyes.tmessages.%loop-player%}

on command "/goldeneyes":
	if player does not have permission "goldeneyes.command":
		send "%sender% tried '/%full command%'" to console

command /ping:
	trigger:
		send "&6Ping&e: %player's ping%"
command /goldeneyes [<text>] [<text>] [<text>]:
	description: Main GoldenEyes Command.
	aliases: ge
	executable by: players and console
	permission: goldeneyes.maincommand
	permission message: &cYou do not have permission to execute this command!
	trigger:
		if arg 1 is not set:
			gecmd("version", sender)
		else if arg 1 is "checks":
			gecmd("checks", sender)
		else if arg 1 is "reload":
			gecmd("reload", sender)
		else if arg 1 is "version":
			gecmd("version", sender)
		else if arg 1 is "help":
			gecmd("help", sender)
		else if arg 1 is "notify":
			if arg 2 is "true":
				gecmd("notify-true", sender)
			else if arg 2 is "false":
				gecmd("notify-false", sender)
			else:
				send "%{CONFIG::prefix}% &cPlease specify a boolean: /goldeneyes notify &4<true|false>&c!"
		else if arg 1 is "reset":
			if arg 3 contains "autoclicker":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.autoclicker}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for AutoClicker!" to sender
			if arg 3 contains "fastplace":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.fastplace}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for Fastplace!" to sender
			if arg 3 contains "fastbreak":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.fastbreak}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for FastBreak! <tooltip:&cThis is no longer in use.>&c&l(Deprecated)" to sender
			if arg 3 contains "liquidinteract":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.liquidinteract}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for LiquidInteract!" to sender
			if arg 3 contains "waterwalk":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.waterwalk}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for WaterWalk!" to sender
			if arg 3 contains "autosneak":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.autosneak}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for AutoSneak!" to sender
			if arg 3 contains "reach":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.fastbow}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for Reach!" to sender
			if arg 3 contains "flight":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.flight}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for Flight!" to sender
			if arg 3 contains "antikb" or "antiknockback":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.antikb}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for AntiKnockback!" to sender
			if arg 3 contains "fastbow" or "speedbow":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.fastbow}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for FastBow!" to sender
			if arg 3 contains "fastladder" or "speedladder":
				clear {CONFIG::violations.%uuid of arg 2 parsed as player%.fastladder}
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations for FastLadder!" to sender
			if arg 3 contains "*" or "all":
				send "%{CONFIG::prefix}% Reset all of %arg 2%'s violations! <tooltip:&cThis is no longer in use.>&c&l(Deprecated)" to sender
			updatePlayerData(arg 2 parsed as player)
		else if arg 1 is "info":
			if arg 2 is set:
				open chest with 4 rows named "&6&n&lGoldenEyes Player Info" to sender
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.reach} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.reach} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.flight} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.flight} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.autosneak} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.autosneak} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.waterwalk} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.waterwalk} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.liquidinteract} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.liquidinteract} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.fastplace} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.fastplace} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.autoclicker} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.autoclicker} to 0
				if {CONFIG::violations.%uuid of arg 2 parsed as player%.fastbow} is not set:
					set {CONFIG::violations.%uuid of arg 2 parsed as player%.fastbow} to 0
				
				if {goldeneyes.antikb.%arg 2%.vl} is not set:
					set {goldeneyes.antikb.%arg 2%.vl} to 0
				format slot 4 of player with player head named "&6%arg 2%" with lore "&7Name: %display name of arg 2 parsed as player%||&7UUID: %uuid of arg 2 parsed as player%" to be unstealable
				format slot 9 of player with red stained glass named "&4Reach/Killaura (%{CONFIG::violations.%uuid of arg 2 parsed as player%.reach}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% Reach"]
				format slot 10 of player with red stained glass named "&4WaterWalk (%{CONFIG::violations.%uuid of arg 2 parsed as player%.waterwalk}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% WaterWalk"]
				format slot 11 of player with red stained glass named "&4AntiKB (%{CONFIG::violations.%uuid of arg 2 parsed as player%.antikb}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% AntiKB"]
				format slot 12 of player with red stained glass named "&4AutoSneak (%{CONFIG::violations.%uuid of arg 2 parsed as player%.autosneak}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% AutoSneak"]	
				format slot 13 of player with red stained glass named "&4FastPlace/Scaffold (%{CONFIG::violations.%uuid of arg 2 parsed as player%.fastplace}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% FastPlace"]
				format slot 14 of player with red stained glass named "&4LiquidInteract (%{CONFIG::violations.%uuid of arg 2 parsed as player%.liquidinteract}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% LiquidInteract"]
				format slot 15 of player with red stained glass named "&4Flight (%{CONFIG::violations.%uuid of arg 2 parsed as player%.flight}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% Flight"]
				format slot 16 of player with red stained glass named "&4Fastbow (%{CONFIG::violations.%uuid of arg 2 parsed as player%.fastbow}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% FastBow"]
				format slot 17 of player with red stained glass named "&4AutoClicker (%{CONFIG::violations.%uuid of arg 2 parsed as player%.autoclicker}%)" with lore "&c&lClick to reset violations" to run [make player execute "/goldeneyes reset %arg 2% AutoClicker"]
				set {menu.%player%} to true
		else if arg 1 is "console":
			if sender is console:
				if arg 2 is "version":
					send "&8[&6GoldenEyesAntiCheat&8]&e Running {@name} v{@version}!" to sender
				if arg 2 is "reload":
					make console execute "/sk reload %script name%.sk"
					send "&8[&6GoldenEyesAntiCheat&8]&e Fully reloaded {@name} v{@version}!" to sender
				if arg 2 is "github":
					send "&8-=-=-=-=-=-=-=-=-=-=-" to console
					send "%nl%&6You can get snapshots at:" to console
					send "&e{@github} %nl%" to console
					send "&8-=-=-=-=-=-=-=-=-=-=-" to console
		else if arg 1 is "git" or "github":
			send "&8-=-=-=-=-=-=-=-=-=-=-" to sender
			send "%nl%&6You can get snapshots at:" to sender
			send "&e<link:{@github}><tooltip:&c&n&lClick here to get snapshots>{@github} %nl%"
			send "&8-=-=-=-=-=-=-=-=-=-=-" to sender
		else if arg 1 is "about":
			gecmd("about", player)
		else if arg 1 is "teleport":
			if arg 2 is set:
				teleport sender to arg 2 parsed as player
		else:
			gecmd("unknowncmd", player)
function gecmd(t: text, p: player):
	if {_t} is "version":
		if text from "{@version-pastebin}" is not "{@version}":
			send "%{CONFIG::prefix}% You are running an outdated version!" to {_p}
			send "%{CONFIG::prefix}% Please update here: &l&n<link:https://www.spigotmc.org/resources/sk-goldeneyes-anticheat.54638/>Click here for spigot page." to {_p}
		else:
			send "%{CONFIG::prefix}% Running Version {@version} by {@author}" to {_p}
	if {_t} is "checks":
		send "%{CONFIG::prefix}% Avaliable Checks:%nl%AutoClicker, Reach/Killaura, FastBow, FastPlace/Scaffold, WaterWalk, LiquidInteract, AutoSneak, Flight, AntiKB" to {_p}
	if {_t} is "reload":
		make console execute "/sk reload %script name%.sk"
		send "%{CONFIG::prefix}% <tooltip:&6{@version}>Fully reloaded {@name} v{@version}!" to {_p}
	if {_t} is "unknowncmd":
		send "%{CONFIG::prefix}% Invaild Argument. Use ""/goldeneyes help"" for help." to {_p}
	if {_t} is "notify-true":
		set {goldeneyes.notify::%{_p}%} to true
		send "%{CONFIG::prefix}% Set notifications to on!" to {_p}
	if {_t} is "notify-false":
		set {goldeneyes.notify::%{_p}%} to false
		send "%{CONFIG::prefix}% Set notifications to off!" to {_p}
	if {_t} is "help":
		send "&8[&a-=-&8]&7&m------&8[&6GoldenEyes&8]&7&m------&8[&a-=-&8]&r" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes reload>/goldeneyes reload&e: Reload" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes version>/goldeneyes version&e: Get the version" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes notify (boolean)>/goldeneyes notify <true|false>&e: Toggle notifications" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes checks>/goldeneyes checks&e: See the Cheat Checks" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes help>/goldeneyes help&e: Get Help" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes info (player)>/goldeneyes info <player>&e: Get Info" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes reset (player) (violation)>/goldeneyes reset <player> <violations>&e: Reset Violations" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes git>/goldeneyes (git[hub]|snapshots)" to {_p}
		send "&8[&a!&8]&6 <suggest command:/goldeneyes about>/goldeneyes about" to {_p}
		send "&8[&a-=-&8]&7&m------&8[&6GoldenEyes&8]&7&m------&8[&a-=-&8]&r" to {_p}
	if {_t} is "about":
		send "&6Name&e: {@name}" to {_p}
		send "&6Author&e: {@author}" to {_p}
		send "&6Version&e: {@version}" to {_p}
		send "&6Description&e: {@description}" to {_p}
function alert(m: text, p: player):
	log "[GoldenEyesAntiCheat] %{_m}% (Ping: %{_p}'s ping%, IP: %{_p}'s ip%)" to "Goldeneyes/checks.log"
	loop all players:
		loop-player has permission "goldeneyes.notify":
			if {goldeneyes.notify::%loop-player%} is true:
				send "%{CONFIG::prefix}% <tooltip:&c&l&nClick to Teleport><cmd:/tp %{_p}%>%{_m}% (Ping: %{_p}'s ping%)" to loop-player
	send "[GoldenEyesAntiCheat] %{_m}% (Ping: %{_p}'s ping%)" to console
	updatePlayerData({_p})
function staffMsg(m: text):
	loop all players:
		loop-player has permission "goldeneyes.notify":
			if {goldeneyes.notify::%loop-player%} is true:
				send "%{CONFIG::prefix}% %{_m}%" to loop-player
	send "[GoldenEyesAntiCheat] %{_m}%" to console
function gekick(m: text, p: player):
	{CONFIG::options.kick} is true
	kick {_p} due to "%{CONFIG::prefix}% You were disconnected from the server.%nl%%nl%&4Reason: %{_m}%%nl%%nl%&7Please do not do this again!"
	send "[GoldenEyesAntiCheat] %{_p}% was kicked from the server. Reason: %{_m}%" to console
	loop all players:
		if loop-player has permission "goldeneyes.notify" or "goldeneyes.notify.kick":
			send "%{CONFIG::prefix}% %{_p}% was kicked from the server. Reason: %{_m}%" to loop-player
function updatePlayerData(p: player):
	set {_uuid} to uuid of {_p}
	set yml value "violations.%uuid of {_p}%.autoclicker" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.autoclicker}
	set yml value "violations.%uuid of {_p}%.reach" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.reach}
	set yml value "violations.%uuid of {_p}%.fastplace" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.fastplace}
	set yml value "violations.%uuid of {_p}%.fastbow" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.fastbow}
	set yml value "violations.%uuid of {_p}%.waterwalk" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.waterwalk}
	set yml value "violations.%uuid of {_p}%.autosneak" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.autosneak}
	set yml value "violations.%uuid of {_p}%.liquidinteract" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.liquidinteract}
	set yml value "violations.%uuid of {_p}%.flight" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.flight} 
	set yml value "violations.%uuid of {_p}%.antikb" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.antikb}
	set yml value "violations.%uuid of {_p}%.xray" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.xray}
	set yml value "violations.%uuid of {_p}%.speed" from file "plugins/GoldenEyes/playerdata.yml" to {CONFIG::violations.%{_uuid}%.speed}
function updatePluginData(a: int = 1):
	set {CONFIG::checks.autoclicker.enabled} to yml value "checks.autoclicker.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.reach.enabled} to yml value "checks.reach.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.fastplace.enabled} to yml value "checks.fastplace.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.fastbow.enabled} to yml value "checks.fastbow.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.waterwalk.enabled} to yml value "checks.waterwalk.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.autosneak.enabled} to yml value "checks.autosneak.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.liquidinteract.enabled} to yml value "checks.liquidinteract.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.flight.enabled} to yml value "checks.flight.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.antikb.enabled} to yml value "checks.antikb.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.xray.enabled} to yml value "checks.xray.enabled" from file "plugins/GoldenEyes/config.yml"
	set {CONFIG::checks.speed.enabled} to yml value "checks.speed.enabled" from file "plugins/GoldenEyes/config.yml"
# End
